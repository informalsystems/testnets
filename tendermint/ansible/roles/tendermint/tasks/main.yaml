---
- name: Check if Tendermint service is present
  stat: path=/etc/systemd/system/tendermint.service
  register: tendermint_service

- name: Stop Tendermint if service is already present
  service: name=tendermint state=stopped
  when: tendermint_service.stat.exists

- name: Ensure Tendermint group exists
  group:
    name: "{{ tendermint_group }}"
    state: present

- name: Ensure Tendermint user exists
  user:
    name: "{{ tendermint_user }}"
    shell: /bin/bash
    home: /home/tendermint
    group: "{{ tendermint_group }}"

- name: Sync the Tendermint binary across to the server
  synchronize:
    src: "{{ tendermint_binary }}"
    dest: /usr/bin/tendermint

- name: Ensure correct Tendermint binary permissions
  file:
    path: /usr/bin/tendermint
    mode: 0755
    owner: "{{ tendermint_user }}"
    group: "{{ tendermint_group }}"

- name: Delete any existing Tendermint configuration/data
  file: path=/home/tendermint/.tendermint state=absent

- name: Copy the Tendermint node configuration across
  copy:
    src: "{{ tendermint_config_path }}/{{ inventory_hostname }}/"
    dest: /home/tendermint/.tendermint/

- name: Ensure the Tendermint user owns the Tendermint home directory
  file:
    path: /home/tendermint/.tendermint/
    recurse: yes
    owner: "{{ tendermint_user }}"
    group: "{{ tendermint_group }}"

- name: Ensure systemd service is present
  template:
    src: tendermint.jinja2.service
    dest: /etc/systemd/system/tendermint.service

- name: Reload systemd
  systemd: daemon_reload=yes

- name: Set Tendermint service to appropriate state
  service: "name=tendermint state={{ tendermint_state }}"
